{
  "openapi": "3.0.3",
  "info": {
    "title": "FraudChecker REST API",
    "description": "Checks for Credit Card Frauds.",
    "termsOfService": "https://www.gnu.org/licenses/gpl-3.0.html",
    "contact": {
      "name": "Dhaval Dalal",
      "url": "https://dhavaldalal.wordpress.com",
      "email": "dhaval@dalal.com"
    },
    "license": {
      "name": "Copyleft License",
      "url": "https://en.wikipedia.org/wiki/Copyleft"
    },
    "version": "API v1.0"
  },
  "servers": [
    {
      "url": "http://localhost:9001",
      "description": "Inferred Url"
    }
  ],
  "tags": [
    {
      "name": "fraud-checker-controller",
      "description": "Fraud Checker Controller"
    }
  ],
  "paths": {
    "/check": {
      "post": {
        "tags": [
          "fraud-checker-controller"
        ],
        "summary": "Check possibility of a fradulent transaction and return a status to the caller.",
        "operationId": "checkFraudUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FraudCheckPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Got Fraud Status for the check",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FraudStatus"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "fraud-checker-controller"
        ],
        "summary": "Am I alive?",
        "operationId": "pongUsingGET",
        "responses": {
          "200": {
            "description": "Got Health status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/validatePathVariable/{id}": {
      "get": {
        "tags": [
          "fraud-checker-controller"
        ],
        "summary": "Validate Path Variable",
        "operationId": "validatePathVariableUsingGET",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "a number",
            "required": true,
            "style": "simple",
            "schema": {
              "maximum": 9999,
              "exclusiveMaximum": false,
              "minimum": 5,
              "exclusiveMinimum": false,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    },
    "/validateRequestParameter": {
      "get": {
        "tags": [
          "fraud-checker-controller"
        ],
        "summary": "Validate Request Parameter",
        "operationId": "validateRequestParameterUsingGET",
        "parameters": [
          {
            "name": "param",
            "in": "query",
            "description": "param",
            "required": true,
            "style": "form",
            "schema": {
              "maximum": 9999,
              "exclusiveMaximum": false,
              "minimum": 5,
              "exclusiveMinimum": false,
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "429": {
            "description": "Too Many Requests"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreditCard": {
        "title": "CreditCard",
        "required": [
          "cvv",
          "holderName",
          "issuingBank",
          "number",
          "validUntil"
        ],
        "type": "object",
        "properties": {
          "cvv": {
            "type": "integer",
            "description": "Card Verification Value - Must be 3 digits",
            "format": "int32",
            "example": 123
          },
          "holderName": {
            "type": "string"
          },
          "issuingBank": {
            "type": "string"
          },
          "number": {
            "type": "string",
            "description": "Card Number - Must be between 16 and 19 digits.  It can contain non-digit characters like SPACE or a dash '-'",
            "example": "4485-2847-2013-4093"
          },
          "validUntil": {
            "type": "string",
            "description": "Expiry Date of the Card",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FraudCheckPayload": {
        "title": "FraudCheckPayload",
        "required": [
          "charge",
          "creditCard"
        ],
        "type": "object",
        "properties": {
          "charge": {
            "$ref": "#/components/schemas/Money"
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCard"
          }
        },
        "additionalProperties": false
      },
      "FraudStatus": {
        "title": "FraudStatus",
        "type": "object",
        "properties": {
          "avStatus": {
            "type": "string"
          },
          "cvvStatus": {
            "type": "string"
          },
          "overall": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Money": {
        "title": "Money",
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "Amount of the transaction",
            "format": "double",
            "example": 1234.56
          },
          "currency": {
            "type": "string",
            "description": "Currency of the transaction",
            "example": "INR"
          }
        },
        "additionalProperties": false
      }
    }
  }
}